import jsPDF from 'jspdf';
import 'jspdf-autotable';

const capitalizeFirstLetterOfEachWord = (str) => {
  return str.replace(/\b\w/g, char => char.toUpperCase());
};

export const exportWorkoutAsPDF = (workoutData, muscleGroups) => {
  const doc = new jsPDF();

  doc.setProperties({
    title: 'Workout Plan',
    subject: 'Generated Workout Plan',
    author: 'GymBro',
    keywords: 'workout, fitness, plan',
  });

  doc.setFontSize(18);
  doc.text('Workout Plan', 105, 20, null, null, 'center');

  doc.setLineWidth(0.5);
  doc.line(20, 25, 190, 25);

  const exerciseHeaders = [['Exercise', 'Reps', 'Tempo', 'Rest']];
  const exerciseData = workoutData.map(exercise => [
    capitalizeFirstLetterOfEachWord(exercise.name.replace(/_/g, ' ')),
    exercise.reps,
    exercise.tempo || 'N/A', 
    exercise.rest || 'N/A' 
  ]);

  doc.autoTable({
    head: exerciseHeaders,
    body: exerciseData,
    startY: 40,
    styles: { halign: 'center', valign: 'middle' },
    headStyles: { fillColor: [100, 100, 100] },
    columnStyles: {
      0: { halign: 'left' }, 
    },
  });

  // Get the Y position where the table ends
  const finalY = doc.lastAutoTable.finalY || 40;

  // Place the footer exactly below the table
  const footerY = finalY + 10; // Adjust the value if you want more space
  doc.setFontSize(10);
  doc.text('Generated by LiftLog ~ App by Mohit Chaudhary', 105, footerY, null, null, 'center');

  const pdfFileName = muscleGroups.join('_').replace(/\s+/g, '_') + '_workout_plan.pdf';

  doc.save(pdfFileName);
};
